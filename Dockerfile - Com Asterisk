FROM wyveo/nginx-php-fpm:php80
RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update -y && apt-get install -y iputils-ping npm curl ffmpeg \
    libncurses5-dev \
    libssl-dev \
    libxml2-dev \
    libsqlite3-dev \
    uuid-dev \
    libjansson-dev \
    liburiparser-dev \
    libedit-dev \
    libsqlite3-dev \
    libpq-dev \
    unixodbc \
    unixodbc-bin \
    unixodbc-dev

#ENV NVM_DIR /usr/local/nvm
#ENV NODE_VERSION 14.17.4

#WORKDIR $NVM_DIR

#RUN curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash \
#    && . $NVM_DIR/nvm.sh \
#    && nvm install $NODE_VERSION \
#    && nvm alias default $NODE_VERSION \
#    && nvm use default

#ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
#ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

#RUN npm install -g npm@6.14.14

# Baixa o código-fonte do Asterisk
WORKDIR /usr/src
#RUN wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-18-current.tar.gz && \
#    tar -zxvf asterisk-18-current.tar.gz
RUN wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-16-current.tar.gz && \
    tar -zxvf asterisk-16-current.tar.gz

# Compila e instala o Asterisk
#WORKDIR /usr/src/asterisk-18.18.0
WORKDIR /usr/src/asterisk-16.30.0
RUN ./configure --libdir=/usr/lib64 1> /dev/null
    # Remove the native build option
RUN make -j$(nproc) menuselect.makeopts
RUN menuselect/menuselect \
                          --disable BUILD_NATIVE \
                          --enable cdr_csv \
                          --enable chan_sip \
                          --enable res_snmp \
                          --enable res_http_websocket \
                      menuselect.makeopts
# Continue with a standard make.
RUN make -j$(nproc) 1> /dev/null
RUN make -j$(nproc) install 1> /dev/null
RUN make -j$(nproc) samples 1> /dev/null
# clean up the cached make files
RUN make dist-clean

#RUN ./configure
#RUN make && make install && make samples && make config


#Copia as configurações para o asterisk
COPY asterisk/manager.conf /etc/asterisk/manager.conf
COPY asterisk/extconfig.conf /etc/asterisk/extconfig.conf
COPY asterisk/sip.conf /etc/asterisk/sip.conf
COPY asterisk/extensions.conf /etc/asterisk/extensions.conf


WORKDIR /usr/src
RUN wget https://cdn.mysql.com/archives/mysql-connector-odbc-8.0/mysql-connector-odbc_8.0.32-1debian11_amd64.deb
RUN ar vx mysql-connector-odbc_8.0.32-1debian11_amd64.deb
RUN dpkg-deb -xv mysql-connector-odbc_8.0.32-1debian11_amd64.deb ./
RUN mkdir -p /usr/lib/x86_64-linux-gnu/odbc/
RUN cp ./usr/lib/x86_64-linux-gnu/odbc/libmyodbc8a.so /usr/lib/x86_64-linux-gnu/odbc/ 
RUN cp ./usr/lib/x86_64-linux-gnu/odbc/libmyodbc8w.so /usr/lib/x86_64-linux-gnu/odbc/

COPY asterisk/odbc/res_odbc.conf /etc/asterisk/res_odbc.conf
COPY asterisk/odbc/func_odbc.conf /etc/asterisk/func_odbc.conf
COPY asterisk/odbc/odbc.ini /etc/odbc.ini
COPY asterisk/odbc/odbcinst.ini /etc/odbcinst.ini

# Definir o usuário e grupo do Asterisk
RUN groupadd -r asterisk && useradd -r -g asterisk asterisk
RUN chown -R root:root /var/run/asterisk
RUN chown -R root:root /etc/asterisk/
RUN chown -R root:root /var/lib/asterisk
RUN chown -R root:root /var/log/asterisk
RUN chown -R root:root /var/spool/asterisk
#RUN chown -R root:root /usr/lib/asterisk/
#RUN chown -R root:root /etc/init.d/asterisk

#Copia os arquivos de configuração do NGINX e do Supervisor
COPY php/www.conf /etc/php/8.0/fpm/pool.d/www.conf
COPY nginx.conf /etc/nginx/nginx.conf
COPY vhost.conf /etc/nginx/conf.d/default.conf
COPY supervisord.conf /etc/supervisord.conf


# Remove arquivos temporários e limpa o cache de pacotes
#RUN rm -rf /usr/src/asterisk-18.* && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/*


WORKDIR /var/www
COPY . /var/www
RUN chmod -R a+x node_modules

ENV MIX_APP_ENV=production
ENV MIX_PUSHER_APP_KEY=myappkey
ENV MIX_PUSHER_APP_CLUSTER=mt1

RUN composer install
RUN npm run production

RUN php artisan config:clear
RUN php artisan view:clear
RUN php artisan route:clear

# Exponha as portas necessárias para o Asterisk
EXPOSE 5060
EXPOSE 5061
EXPOSE 10000-20000/udp

EXPOSE 6001
EXPOSE 80

COPY laravel.log /var/www/storage/logs
RUN chmod -R 777 /var/www/storage